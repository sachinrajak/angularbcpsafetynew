{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/punching/punching.component.ts","webpack:///src/app/punching/punching.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/report/report.component.ts","webpack:///src/app/report/report.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","httpclient","bcp_api_service","User","post","get","Data","dailyDate","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","router","api","selectedEmail","iserrorMessage","api_message","console","log","navigate","form","valid","getUserDetail","subscribe","userdetail","Object","length","email","NewUser","ExistingUser","MenuComponent","PunchingComponent","route","getEmail","issuccessMessage","isAdmin","selectedPunching","name","mobile","location","familycount","covid","locality","aarogya","remarks","snapshot","paramMap","role","JSON","stringify","dailyPunching","statusstring","submitPunching","RegisterComponent","apiService","selectedUser","value","createUser","error","NewRegistration","ReportComponent","selectedDate","logdate","myDate","Isrecord","Isrecordnot","isReport","reportdate","message","dtOptions","Date","getMonth","getDate","getFullYear","getPunchingData","punchingdata","pagingType","pageLength","processing","getReport","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {register} from './register';\nimport {punching} from './punching';\nimport { report } from './report';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n//  bcp_api_service = \"http://127.0.0.1:3004\";\n  //safety_api_service = \"http://127.0.0.1:3005\";\n  bcp_api_service = \"https://bcpservice.herokuapp.com\";\n  constructor(private httpclient: HttpClient) { }\n\n  createUser(User: register): Observable<string>{\n    return this.httpclient.post<string>(`${this.bcp_api_service}/registerUser`, User);\n  }\n\n  getUserDetail(id: string): Observable<register>{\n    return this.httpclient.get<register>(`${this.bcp_api_service}/getuser/`+id)\n  }\n\n  dailyPunching(Data: punching): Observable<string>{\n    return this.httpclient.post<string>(`${this.bcp_api_service}/LogData`, Data);\n  }\n\n  getPunchingData(dailyDate: report): Observable<punching[]>{\n    return this.httpclient.post<punching[]>(`${this.bcp_api_service}/getuserdetails`, dailyDate);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { PunchingComponent } from './punching/punching.component';\nimport { ReportComponent } from './report/report.component';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: 'register', component: RegisterComponent },\n  { path: 'punching', component: PunchingComponent },\n  { path: 'report', component: ReportComponent },\n  { path: 'home', component:HomeComponent},\n  { path: '', component:HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BCP-Safety-app';\n}\n","\n<app-menu></app-menu>\n    \n<div class=\"container-fluid text-center\">    \n  <div class=\"row content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PunchingComponent } from './punching/punching.component';\nimport { ReportComponent } from './report/report.component';\nimport {DataTablesModule} from 'angular-datatables';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    HomeComponent,\n    RegisterComponent,\n    PunchingComponent,\n    ReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    DataTablesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { ApiService} from '../api.service';\nimport {register} from '../register';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router, private api: ApiService) { }\nselectedEmail: string =\"\";\niserrorMessage: boolean = false;\napi_message: string = \"\";\n  ngOnInit(): void {\n    this.selectedEmail = \"\";\n  }\n\n  NewUser(){\n    \n    console.log('new user call');\n      this.router.navigate(['/register']);\n  }\n\n  ExistingUser(form){\n    if(form.valid)\n    {\n      this.api.getUserDetail(this.selectedEmail).subscribe((userdetail: register) => {\n        if(Object.keys(userdetail).length > 0)\n        {\n          this.router.navigate(['/punching',{email: this.selectedEmail}]);\n        }\n        else\n        {\n          this.iserrorMessage = true;\n    this.api_message = \"User is not registered, kindly register yourself first.\";\n        }\n      })\n   \n    }\n}\n\n}\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #f=\"ngForm\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>Welcome to Safety App</b></h2></legend><br>\n<!-- \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\"></label>\n    <div class=\"col-md-4\"><br>\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n      <button class=\"btn btn-warning\" (click)=\"NewUser()\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;New User <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n        </div>\n    </div>\n  </div> -->\n\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\"></label>\n    <div class=\"col-md-4\"><br>\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n      <!-- <input name=\"email\" placeholder=\"E-Mail Address\" class=\"form-control\"  type=\"text\"> -->\n      <button type=\"submit\" class=\"btn btn-warning form-control\" (click)=\"NewUser()\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;New User <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n        </div>\n     \n    </div>\n  </div>\n\n  <div *ngIf=\"f.submitted && email.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"email.errors?.required || email.errors?.pattern\">E-mail is required or invalid</div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\"></label>\n    <div class=\"col-md-4\"><br>\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n      <input name=\"email\" placeholder=\"E-Mail Address\" [(ngModel)]=\"selectedEmail\" class=\"form-control\"  type=\"text\"\n      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n    #email=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"\n     required>\n      <button type=\"submit\" class=\"btn btn-warning form-control\" (click)=\"ExistingUser(f)\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Existing User <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n        </div>\n        <div *ngIf=\"iserrorMessage\" class=\"alert alert-warning\" role=\"alert\" id=\"error_message\">{{api_message}}</div>\n    </div>\n  </div>\n\n\n<!-- Button -->\n\n\n</fieldset>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from '../api.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private api:ApiService) { }\n //isAdmin: Boolean = false;\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<nav class=\"navbar navbar-inverse\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <!-- <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>                        \n        </button> -->\n        <a class=\"navbar-brand\" routerLink=\"home\">Logo</a>\n      </div>\n      <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\n        <ul class=\"nav navbar-nav\">\n          <!-- <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"home\" routerLinkActive=\"active\">Home</a></li> -->\n          <!-- <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"register\" routerLinkActive=\"active\">Register</a></li>\n          <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"punching\" routerLinkActive=\"active\">Punching</a></li> -->\n          <!-- <li *ngIf=\"isAdmin\" class=\"nav-item\"><a class=\"nav-link\" routerLink=\"report\" routerLinkActive=\"active\">Daily Report</a></li> -->\n        </ul>\n        <!-- <ul class=\"nav navbar-nav navbar-right\">\n          <li><a href=\"#\"><span class=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\n        </ul> -->\n      </div>\n    </div>\n  </nav>","\nimport { Component, OnInit } from '@angular/core';\nimport { punching } from '../punching'\nimport {register} from '../register';\nimport {ActivatedRoute, Router } from '@angular/router';\nimport {ApiService} from '../api.service';\n\n\n\n@Component({\n  selector: 'app-punching',\n  templateUrl: './punching.component.html',\n  styleUrls: ['./punching.component.css']\n})\nexport class PunchingComponent implements OnInit {\n  \n  constructor(private route: ActivatedRoute, private api:ApiService, private router: Router ) { }\n  getEmail: string = \"\";\n  issuccessMessage: boolean = false;\n  iserrorMessage: boolean = false;\n  isAdmin: Boolean = false;\n  api_message: string = \"\";\nselectedPunching: punching = { email: null, name: null, mobile: null, location: null, familycount: null, covid: null, locality: null, aarogya: null, remarks: null}\n  ngOnInit(): void {\n   this.getEmail = this.route.snapshot.paramMap.get('email');\n   this.selectedPunching.email = this.getEmail;\n\nthis.api.getUserDetail(this.getEmail).subscribe((userdetail: register) => {\n  console.log(userdetail);\n  console.log(Object.keys(userdetail).length);\n  if(Object.keys(userdetail).length > 0)\n  {\n  this.selectedPunching.name = userdetail[0].name;\n  this.selectedPunching.mobile = userdetail[0].mobile;\n  this.selectedPunching.location = userdetail[0].location;\n  this.selectedPunching.familycount = userdetail[0].familycount;\n  if(userdetail[0].role == \"1\")\n  {\n    this.isAdmin = true;\n  }\n  else\n  {this.isAdmin = false;}\n  }\n  else{\n    this.issuccessMessage = false;\n    this.iserrorMessage = true;\n    this.api_message = \"Data not available, try again.\";\n  }\n})\n\n   this.selectedPunching.covid = \"Yes\";\n   this.selectedPunching.locality=\"No\";\n   this.selectedPunching.aarogya=\"Yes\";\n\n  }\n\n  submitPunching(form){\n    console.log(JSON.stringify(this.selectedPunching, null, \" \"));\n    this.api.dailyPunching(this.selectedPunching).subscribe((statusstring: string) => {\n      if(statusstring == \"1\")\n      {\n        this.issuccessMessage = true;\n        this.iserrorMessage = false;\n        this.api_message = \"Record saved successfully.\";\n      }\n      if(statusstring == \"0\")\n      {\n        this.issuccessMessage = false;\n        this.iserrorMessage = true;\n        this.api_message = \"Error occured, please try again.\";\n      }\n      console.log(statusstring);\n    })\n  }\n\n  showReport(){\n    this.router.navigate(['/report']);\n  }\n\n}\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #punchingForm = \"ngForm\"  id=\"punching_form\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>Daily Punching</b></h2></legend><br>\n\n<!-- Text input-->\n\n<!-- Text input-->\n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">E-Mail</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n    <input name=\"email\" placeholder=\"E-Mail Address\" [(ngModel)]=\"selectedPunching.email\" class=\"form-control\"  type=\"text\" readonly>\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n       \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Is your family safe from Covid19 ?</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n         \n          <label class=\"radio-inline\">\n            <input type=\"radio\"  [(ngModel)]=\"selectedPunching.covid\" name=\"covid\" value=\"Yes\" checked>Yes\n          </label>\n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.covid\" value=\"No\" name=\"covid\">No\n          </label>\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Is nearby locality afftected with Covid19 ?</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n         \n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.locality\" name=\"locality\" value=\"Yes\">Yes\n          </label>\n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.locality\" name=\"locality\" value=\"No\" checked>No\n          </label>\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Is Aarogya Setu app shownig Safe ?</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n         \n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.aarogya\" name=\"aarogya\" value=\"Yes\" checked>Yes\n          </label>\n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.aarogya\" value=\"No\" name=\"aarogya\">No\n          </label>\n\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" >Remarks</label> \n    <div class=\"col-md-4 inputGroupContainer\">\n    <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-pencil\"></i></span>\n  <input name=\"remarks\" placeholder=\"Enter remarks if any\" [(ngModel)]=\"selectedPunching.remarks\" class=\"form-control\"  type=\"text\">\n    </div>\n  </div>\n</div>\n\n  \n\n<!-- Success message -->\n<div *ngIf=\"issuccessMessage\" class=\"alert alert-success\" role=\"alert\" id=\"success_message\">{{api_message}}</div>\n<div *ngIf=\"iserrorMessage\" class=\"alert alert-warning\" role=\"alert\" id=\"error_message\">{{api_message}}</div>\n\n<!-- Button -->\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" ></label> \n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"submitPunching(punchingForm)\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SUBMIT <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n\n</div>\n\n<div *ngIf=\"isAdmin\" class=\"form-group\">\n  <label class=\"col-md-4 control-label\"></label>\n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"showReport()\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Show Report <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n</div>\n\n</fieldset>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { register } from '../register';\nimport {ApiService} from '../api.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private apiService:ApiService, private router: Router) { }\n\n  issuccessMessage: boolean = false;\n  iserrorMessage: boolean = false;\n  api_message: string = \"\";\n  selectedUser: register = { name:null, email: null, mobile: null, location: null, familycount: null}\n\n  ngOnInit(): void {\n  }\n\n  NewRegistration(form){\n    if(form.valid)\n    {\n    console.log(JSON.stringify(form.value, null, \" \"));\n    this.apiService.createUser(form.value).subscribe((statusstring: string)=>{\n      if(statusstring == \"1\")\n      {\n        this.issuccessMessage = true;\n        this.iserrorMessage = false;\n        this.api_message = \"User successfully registered.\";\n        this.router.navigate(['/punching',{email: this.selectedUser.email}]);\n      }\n      if(statusstring == \"2\")\n      {\n        this.issuccessMessage = false;\n        this.iserrorMessage = true;\n        this.api_message = \"User already registered.\";\n      }\n      console.log(statusstring);\n    }, error  =>{\n      console.log(error);\n    })\n    \n    }\n  }\n}\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #registerForm=\"ngForm\" novalidate id=\"contact_form\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>User Registration</b></h2></legend><br>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && name.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"name.errors?.required || name.errors?.pattern\">Name is required and text only</div>\n  </div>\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\">Name</label>  \n  <div class=\"col-md-4 inputGroupContainer\">\n  <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n  <input  name=\"name\" [(ngModel)]=\"selectedUser.name\" placeholder=\"Enter Name\" class=\"form-control\"  type=\"text\"\n  pattern=\"[a-zA-Z\\s]+\"\n  #name=\"ngModel\"\n  [ngClass]=\"{ 'is-invalid': registerForm.submitted && name.invalid }\"\n   required\n  >\n\n    </div>\n  </div>\n</div>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && email.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"email.errors?.required || email.errors?.pattern\">E-mail is required and should be valid</div>\n  </div>\n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">E-Mail</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n    <input name=\"email\" [(ngModel)]=\"selectedUser.email\" placeholder=\"E-Mail Address\" class=\"form-control\"  type=\"email\"\n    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n    #email=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': registerForm.submitted && email.invalid }\"\n     required>\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && mobile.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"mobile.errors?.required || mobile.errors?.pattern\">Mobile Number is required and numeric only</div>\n  </div>       \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Contact No.</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-earphone\"></i></span>\n    <input name=\"mobile\" [(ngModel)]=\"selectedUser.mobile\" placeholder=\"888888888\" class=\"form-control\" type=\"text\"\n    pattern=\"[0-9]+\"\n    #mobile=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': registerForm.submitted && mobile.invalid }\"\n     required>\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && location.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"location.errors?.required\">Location is required</div>\n  </div>\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" >Location</label> \n    <div class=\"col-md-4 inputGroupContainer\">\n    <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-map-marker\"></i></span>\n  <input name=\"location\" [(ngModel)]=\"selectedUser.location\" placeholder=\"Location\" class=\"form-control\"  type=\"text\"\n  #location=\"ngModel\"\n  [ngClass]=\"{ 'is-invalid': registerForm.submitted && location.invalid }\"\n   required>\n    </div>\n  </div>\n</div>\n\n  \n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && familycount.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"familycount.errors?.required || familycount.errors?.pattern\">Family member count is required and numeric only</div>\n  </div>\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\">Family members count</label>  \n  <div class=\"col-md-4 inputGroupContainer\">\n  <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n  <input  name=\"familycount\" [(ngModel)]=\"selectedUser.familycount\" placeholder=\"Family count\" class=\"form-control\"  type=\"text\"\n  pattern=\"[0-9]{1,2}\"\n  #familycount=\"ngModel\"\n  [ngClass]=\"{ 'is-invalid': registerForm.submitted && familycount.invalid }\"\n   required>\n    </div>\n  </div>\n</div>\n\n<!-- Success message -->\n<div *ngIf=\"issuccessMessage\" class=\"alert alert-success\" role=\"alert\" id=\"success_message\">{{api_message}}</div>\n<div *ngIf=\"iserrorMessage\" class=\"alert alert-warning\" role=\"alert\" id=\"error_message\">{{api_message}}</div>\n\n<!-- Button -->\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\"></label>\n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"NewRegistration(registerForm)\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SUBMIT <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n</div>\n\n</fieldset>\n</form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { report } from '../report';\nimport {ApiService} from '../api.service'\nimport {punching} from '../punching';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor(private api: ApiService) { }\nselectedDate: report = {logdate: null};\nlogdate: any;\nmyDate: string = \"\";\npunchingdata: punching;\nIsrecord: Boolean = false;\nIsrecordnot: Boolean = false;\nisReport: Boolean = false;\nreportdate: string = \"\";\nmessage: string = \"\";\ntitle = 'angulardatatables';\ndtOptions: DataTables.Settings = {};\nngOnInit() {\n \n    \n  }\n\n  getReport(form)\n  {\n    this.isReport = true;\n    if(form.valid)\n    {\n      this.reportdate = this.selectedDate.logdate;\n     // debugger;\n      this.myDate = (new Date(this.selectedDate.logdate).getMonth() + 1) + \"/\" + (new Date(this.selectedDate.logdate).getDate()) + \"/\" + (new Date(this.selectedDate.logdate).getFullYear());\n    //  console.log(JSON.stringify(this.myDate, null, \" \"));\n      //this.logdate = {\"logdate\" : this.myDate};\n      //this.logdate = JSON.stringify(this.logdate, null, \" \")\n     // console.log(this.logdate);\n      this.selectedDate.logdate = this.myDate;\n      console.log(this.selectedDate);\nthis.api.getPunchingData(this.selectedDate).subscribe((punchingdata: any) => {\n // debugger;\n if(Object.keys(punchingdata).length > 0 )\n {\n   this.Isrecord = true;\n   this.Isrecordnot = false;\n  this.punchingdata = punchingdata;\n  this.dtOptions = {\n    pagingType: 'full_numbers',\n    pageLength: 5,\n    processing: true\n  };\n  \n }\n else\n {\n  this.Isrecord = false;\n  this.Isrecordnot = true;\n  this.message = \"No record found\";\n }\n    console.log(punchingdata);\n})\n\n    //  console.log(this.selectedDate.reportdate);\n    }\n  }\n\n}\n\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #reportForm=\"ngForm\"  id=\"report_form\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>Daily Report</b></h2></legend><br>\n\n<!-- Text input-->\n\n<!-- Text input-->\n<div *ngIf=\"reportForm.submitted && logdate.invalid\" class=\"text-danger\">\n  <!-- individual validation errors -->\n  <div *ngIf=\"logdate.errors?.required\">Report date is required</div>\n</div> \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Report Date</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-calendar\"></i></span>\n    <input name=\"logdate\" [(ngModel)]=\"selectedDate.logdate\" class=\"form-control\"  type=\"date\" required\n    #logdate=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': reportForm.submitted && logdate.invalid }\">\n      </div>\n    </div>\n  </div>\n\n<!-- Button -->\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\"></label>\n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"getReport(reportForm)\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SUBMIT <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n</div>\n\n</fieldset>\n</form>\n<div *ngIf=\"isReport\" style=\"text-align: left;\"><h6><b>Report Date: {{reportdate}}</b></h6></div>\n<div *ngIf=\"Isrecord\">\n  \n<table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\"  data-page-length='25'>\n  \n  <thead>\n    <tr>\n      <th>Name</th>\n      <!-- <th>Email</th> -->\n      <th>Contact</th>\n      <th>Family Safe</th>\n      <th>Safe as per Aarogya Setu</th>\n      <!-- <th data-class-name=\"priority\">Email</th> -->\n    </tr>\n  </thead>\n  <tbody>\n   <tr *ngFor=\"let group of punchingdata\">\n         <td>{{group.name}}</td>\n         <td>{{group.mobile}}</td>\n         <td>{{group.covid}}</td>\n         <td>{{group.aarogya}}</td>\n        <!-- <td>{{group.email}}</td> -->\n       \n     </tr>\n  </tbody>\n</table>\n</div>\n<div *ngIf=\"Isrecordnot\">{{message}}</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}