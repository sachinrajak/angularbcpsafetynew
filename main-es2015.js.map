{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/punching/punching.component.ts","./src/app/punching/punching.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/report/report.component.ts","./src/app/report/report.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA2C;;;AAUpC,MAAM,UAAU;IAKrB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH5C,8CAA8C;QAC5C,+CAA+C;QAC/C,oBAAe,GAAG,kCAAkC,CAAC;IACP,CAAC;IAE/C,UAAU,CAAC,IAAc;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,GAAG,IAAI,CAAC,eAAe,eAAe,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,GAAG,IAAI,CAAC,eAAe,WAAW,GAAC,EAAE,CAAC;IAC7E,CAAC;IAED,aAAa,CAAC,IAAc;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,GAAG,IAAI,CAAC,eAAe,UAAU,EAAE,IAAI,CAAC,CAAC;IAC/E,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAa,GAAG,IAAI,CAAC,eAAe,iBAAiB,EAAE,SAAS,CAAC,CAAC;IAC/F,CAAC;;oEArBU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACW;AACA;AACN;AACN;;;AAGtD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,kEAAa,EAAC;IACxC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAC,kEAAa,EAAC;CACrC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,gBAAgB,CAAC;KAC1B;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,sEAAqB;QAErB,yEACE;QAAA,yEACE;QAAA,2EAA+B;QACjC,4DAAM;QACR,4DAAM;;6FDAO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACA;AACT;AACO;AACA;AACY;AACA;AACN;AACR;;AAqB7C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,0DAAW;YACX,oEAAgB;YAChB,qEAAgB;YAChB,oEAAgB;SACjB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,kEAAa;QACb,kEAAa;QACb,8EAAiB;QACjB,8EAAiB;QACjB,yEAAe,aAGf,uEAAa;QACb,0DAAW;QACX,oEAAgB;QAChB,qEAAgB;QAChB,oEAAgB;6FAKP,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,kEAAa;oBACb,8EAAiB;oBACjB,8EAAiB;oBACjB,yEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,oEAAgB;oBAChB,qEAAgB;oBAChB,oEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICgC9C,sEAA6D;IAAA,wFAA6B;IAAA,4DAAM;;;IAFlG,0EACE;IACA,iHAA6D;IAC/D,4DAAM;;;;IADC,0DAAuD;IAAvD,uKAAuD;;;IAcxD,0EAAwF;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,mFAAe;;;ADpCxG,MAAM,aAAa;IAExB,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAC7D,kBAAa,GAAU,EAAE,CAAC;QAC1B,mBAAc,GAAY,KAAK,CAAC;QAChC,gBAAW,GAAW,EAAE,CAAC;IAHwC,CAAC;IAIhE,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,OAAO;QAEL,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,YAAY,CAAC,IAAI;QACf,IAAG,IAAI,CAAC,KAAK,EACb;YACE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,UAAoB,EAAE,EAAE;gBAC5E,IAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EACrC;oBACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAC,EAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAC,CAAC,CAAC,CAAC;iBACjE;qBAED;oBACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBACjC,IAAI,CAAC,WAAW,GAAG,yDAAyD,CAAC;iBACxE;YACH,CAAC,CAAC;SAEH;IACL,CAAC;;0EAhCY,aAAa;6FAAb,aAAa;;QCV1B,yEAEI;QAAA,6EACJ;QAAA,2EAEA;QACA,yEAAQ;QAAA,qEAAI;QAAA,oEAAG;QAAA,gFAAqB;QAAA,4DAAI;QAAA,4DAAK;QAAA,4DAAS;QAAA,gEACtD;QAWE,yEACE;QAAA,uEAA8C;QAC9C,0EAAsB;QAAA,iEAClB;QAAA,0EACI;QAAA,2EAAgC;QAAA,mEAAwC;QAAA,4DAAO;QAErF,6EAAgF;QAArB,sIAAS,aAAS,IAAC;QAAE,qHAAyD;QAAA,uEAA8C;QAAA,4GAAgD;QAAA,4DAAS;QAC9O,4DAAM;QAEV,4DAAM;QACR,4DAAM;QAEN,4GACE;QAGF,0EACE;QAAA,uEAA8C;QAC9C,0EAAsB;QAAA,iEAClB;QAAA,0EACI;QAAA,2EAAgC;QAAA,oEAA4C;QAAA,4DAAO;QACzF,iFAKA;QALiD,yLAA2B;QAA5E,4DAKA;QAAA,6EAAsF;QAA3B,kRAAS,qBAAe,IAAC;QAAE,0HAA8D;QAAA,uEAA8C;QAAA,4GAAgD;QAAA,4DAAS;QACzP,4DAAM;QACN,4GAAwF;QAC5F,4DAAM;QACR,4DAAM;QAMR,4DAAW;QACX,4DAAO;QAvDP,4DAEI;;;;QA4BG,2DAAoC;QAApC,8FAAoC;QASY,0DAA2B;QAA3B,sFAA2B;QAOrE,0DAAsB;QAAtB,oFAAsB;;6FDpCtB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,aAAa;IAExB,YAAoB,GAAc;QAAd,QAAG,GAAH,GAAG,CAAW;IAAI,CAAC;IACxC,2BAA2B;IAE1B,QAAQ;IAER,CAAC;;0EAPU,aAAa;6FAAb,aAAa;QCR1B,yEACI;QAAA,yEACE;QAAA,yEACE;QAKA,uEAA0C;QAAA,+DAAI;QAAA,4DAAI;QACpD,4DAAM;QACN,yEACE;QAAA,mEAKK;QAIP,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDdK,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICqFlD,0EAA4F;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,mFAAe;;;IAC3G,0EAAwF;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,mFAAe;;;;IAWvG,yEACE;IAAA,sEAA8C;IAC9C,0EAAsB;IAAA,gEACpB;IAAA,gJAAoF;IAAA,6EAAsE;IAAhD,uTAAsB;IAA0B,uHAA4D;IAAA,sEAA8C;IAAA,2GAAgD;IAAA,4DAAS;IAC/T,4DAAM;IACR,4DAAM;;ADzFC,MAAM,iBAAiB;IAE5B,YAAoB,KAAqB,EAAU,GAAc,EAAU,MAAc;QAArE,UAAK,GAAL,KAAK,CAAgB;QAAU,QAAG,GAAH,GAAG,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QACzF,aAAQ,GAAW,EAAE,CAAC;QACtB,qBAAgB,GAAY,KAAK,CAAC;QAClC,mBAAc,GAAY,KAAK,CAAC;QAChC,YAAO,GAAY,KAAK,CAAC;QACzB,gBAAW,GAAW,EAAE,CAAC;QAC3B,qBAAgB,GAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC;IANnE,CAAC;IAO/F,QAAQ;QACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/C,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,UAAoB,EAAE,EAAE;YACvE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EACrC;gBACA,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAChD,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACpD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACxD,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC9D,IAAG,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,EAC5B;oBACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;iBACrB;qBAED;oBAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBAAC;aACtB;iBACG;gBACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,WAAW,GAAG,gCAAgC,CAAC;aACrD;QACH,CAAC,CAAC;QAEC,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAC,IAAI,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAC,KAAK,CAAC;IAErC,CAAC;IAED,cAAc,CAAC,IAAI;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,YAAoB,EAAE,EAAE;YAC/E,IAAG,YAAY,IAAI,GAAG,EACtB;gBACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,WAAW,GAAG,4BAA4B,CAAC;aACjD;YACD,IAAG,YAAY,IAAI,GAAG,EACtB;gBACE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,WAAW,GAAG,kCAAkC,CAAC;aACvD;YACD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;;kFA/DU,iBAAiB;iGAAjB,iBAAiB;;QCd9B,yEAEI;QAAA,6EACJ;QAAA,2EAEA;QACA,yEAAQ;QAAA,qEAAI;QAAA,oEAAG;QAAA,yEAAc;QAAA,4DAAI;QAAA,4DAAK;QAAA,4DAAS;QAAA,gEAE/C;QAGA,yEACI;QAAA,4EAAsC;QAAA,kEAAM;QAAA,4DAAQ;QAClD,0EACA;QAAA,0EACI;QAAA,2EAAgC;QAAA,mEAA4C;QAAA,4DAAO;QACzF,4EACE;QAD+C,sMAAoC;QAArF,4DACE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAIR,0EACI;QAAA,4EAAsC;QAAA,8FAAkC;QAAA,4DAAQ;QAC9E,0EACA;QAAA,0EAEI;QAAA,6EACE;QAAA,6EAA2F;QAAtE,sMAAoC;QAAzD,4DAA2F;QAAA,gEAC7F;QAAA,4DAAQ;QACR,6EACE;QAAA,6EAAiF;QAA7D,sMAAoC;QAAxD,4DAAiF;QAAA,+DACnF;QAAA,4DAAQ;QAEZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,4EAAsC;QAAA,uGAA2C;QAAA,4DAAQ;QACvF,0EACA;QAAA,0EAEI;QAAA,6EACE;QAAA,6EAAwF;QAApE,yMAAuC;QAA3D,4DAAwF;QAAA,gEAC1F;QAAA,4DAAQ;QACR,6EACE;QAAA,6EAA+F;QAA3E,yMAAuC;QAA3D,4DAA+F;QAAA,+DACjG;QAAA,4DAAQ;QAEZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,4EAAsC;QAAA,8FAAkC;QAAA,4DAAQ;QAC9E,0EACA;QAAA,0EAEI;QAAA,6EACE;QAAA,6EAA8F;QAA1E,wMAAsC;QAA1D,4DAA8F;QAAA,gEAChG;QAAA,4DAAQ;QACR,6EACE;QAAA,6EAAqF;QAAjE,wMAAsC;QAA1D,4DAAqF;QAAA,+DACvF;QAAA,4DAAQ;QAEZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QAIR,0EACE;QAAA,4EAAuC;QAAA,mEAAO;QAAA,4DAAQ;QACpD,0EACA;QAAA,0EACF;QAAA,2EAAgC;QAAA,oEAA0C;QAAA,4DAAO;QACjF,6EACE;QADuD,wMAAsC;QAA/F,4DACE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAKN,gHAA4F;QAC5F,gHAAwF;QAGxF,0EACE;QAAA,uEAA+C;QAC/C,2EAAsB;QAAA,iEACpB;QAAA,iJAAoF;QAAA,8EAAsF;QAAhE,sRAAS,uBAA4B,IAAC;QAA0B,mHAAuD;QAAA,uEAA8C;QAAA,4GAAgD;QAAA,4DAAS;QAC1U,4DAAM;QAER,4DAAM;QAEN,gHACE;QAMF,4DAAW;QACX,4DAAO;QACP,4DAAM;;QA3F+C,2DAAoC;QAApC,+FAAoC;QAaxD,0DAAoC;QAApC,+FAAoC;QAGrC,0DAAoC;QAApC,+FAAoC;QAapC,0DAAuC;QAAvC,kGAAuC;QAGvC,0DAAuC;QAAvC,kGAAuC;QAavC,0DAAsC;QAAtC,iGAAsC;QAGtC,0DAAsC;QAAtC,iGAAsC;QAcX,0DAAsC;QAAtC,iGAAsC;QAQ5F,0DAAwB;QAAxB,sFAAwB;QACxB,0DAAsB;QAAtB,oFAAsB;QAWtB,2DAAe;QAAf,6EAAe;;6FDpFP,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICW9C,sEAA2D;IAAA,yFAA8B;IAAA,4DAAM;;;IAFnG,0EACI;IACA,oHAA2D;IAC7D,4DAAM;;;;IADC,0DAAqD;IAArD,uKAAqD;;;IAqB1D,sEAA6D;IAAA,iGAAsC;IAAA,4DAAM;;;IAF7G,0EACI;IACA,qHAA6D;IAC/D,4DAAM;;;;IADC,0DAAuD;IAAvD,uKAAuD;;;IAmB5D,sEAA+D;IAAA,qGAA0C;IAAA,4DAAM;;;IAFnH,0EACI;IACA,qHAA+D;IACjE,4DAAM;;;;IADC,0DAAyD;IAAzD,uKAAyD;;;IAmB9D,sEAAuC;IAAA,+EAAoB;IAAA,4DAAM;;;IAFrE,0EACI;IACA,qHAAuC;IACzC,4DAAM;;;;IADC,0DAAiC;IAAjC,iHAAiC;;;IAmBtC,sEAAyE;IAAA,2GAAgD;IAAA,4DAAM;;;IAFnI,0EACI;IACA,qHAAyE;IAC3E,4DAAM;;;;IADC,0DAAmE;IAAnE,2KAAmE;;;IAiB5E,0EAA4F;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,oFAAe;;;IAC3G,0EAAwF;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,oFAAe;;;ADhGhG,MAAM,iBAAiB;IAE5B,YAAoB,UAAqB,EAAU,MAAc;QAA7C,eAAU,GAAV,UAAU,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEjE,qBAAgB,GAAY,KAAK,CAAC;QAClC,mBAAc,GAAY,KAAK,CAAC;QAChC,gBAAW,GAAW,EAAE,CAAC;QACzB,iBAAY,GAAa,EAAE,IAAI,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAC;IAL9B,CAAC;IAOtE,QAAQ;IACR,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,IAAG,IAAI,CAAC,KAAK,EACb;YACA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,YAAoB,EAAC,EAAE;gBACvE,IAAG,YAAY,IAAI,GAAG,EACtB;oBACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,WAAW,GAAG,+BAA+B,CAAC;oBACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAC,EAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;iBACtE;gBACD,IAAG,YAAY,IAAI,GAAG,EACtB;oBACE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,WAAW,GAAG,0BAA0B,CAAC;iBAC/C;gBACD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC5B,CAAC,EAAE,KAAK,CAAE,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC;SAED;IACH,CAAC;;kFApCU,iBAAiB;iGAAjB,iBAAiB;;QCX9B,yEAEI;QAAA,6EACJ;QAAA,2EAEA;QACA,yEAAQ;QAAA,qEAAI;QAAA,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;QAAA,4DAAK;QAAA,4DAAS;QAAA,gEAElD;QACA,6GACI;QAGJ,0EACE;QAAA,4EAAsC;QAAA,gEAAI;QAAA,4DAAQ;QAClD,0EACA;QAAA,0EACA;QAAA,2EAAgC;QAAA,mEAAwC;QAAA,4DAAO;QAC/E,iFAOE;QAPkB,iMAA+B;QAAnD,4DAOE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,+GACI;QAGJ,0EACI;QAAA,4EAAsC;QAAA,kEAAM;QAAA,4DAAQ;QAClD,0EACA;QAAA,0EACI;QAAA,2EAAgC;QAAA,oEAA4C;QAAA,4DAAO;QACzF,iFAKE;QALkB,kMAAgC;QAApD,4DAKE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,+GACI;QAGJ,0EACI;QAAA,4EAAsC;QAAA,uEAAW;QAAA,4DAAQ;QACvD,0EACA;QAAA,0EACI;QAAA,2EAAgC;QAAA,oEAA4C;QAAA,4DAAO;QACzF,iFAKE;QALmB,mMAAiC;QAAtD,4DAKE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,+GACI;QAGJ,0EACE;QAAA,4EAAuC;QAAA,oEAAQ;QAAA,4DAAQ;QACrD,0EACA;QAAA,0EACF;QAAA,2EAAgC;QAAA,oEAA8C;QAAA,4DAAO;QACrF,iFAIE;QAJqB,qMAAmC;QAA1D,4DAIE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAIN,+GACI;QAGJ,0EACE;QAAA,4EAAsC;QAAA,gFAAoB;QAAA,4DAAQ;QAClE,0EACA;QAAA,0EACA;QAAA,2EAAgC;QAAA,mEAAwC;QAAA,4DAAO;QAC/E,iFAKE;QALyB,wMAAsC;QAAjE,4DAKE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,gHAA4F;QAC5F,gHAAwF;QAGxF,0EACE;QAAA,uEAA8C;QAC9C,2EAAsB;QAAA,iEACpB;QAAA,iJAAoF;QAAA,8EAAuF;QAAjE,uRAAS,wBAA6B,IAAC;QAA0B,mHAAuD;QAAA,uEAA8C;QAAA,4GAAgD;QAAA,4DAAS;QAC3U,4DAAM;QACR,4DAAM;QAEN,4DAAW;QACX,4DAAO;QACP,4DAAM;;;;;;;;QA9GD,0DAA8C;QAA9C,8FAA8C;QAS7B,0DAA+B;QAA/B,0FAA+B;QAYhD,0DAA+C;QAA/C,8FAA+C;QAS5B,0DAAgC;QAAhC,2FAAgC;QAUnD,0DAAgD;QAAhD,8FAAgD;QAS5B,0DAAiC;QAAjC,4FAAiC;QAUrD,0DAAkD;QAAlD,8FAAkD;QAS9B,0DAAmC;QAAnC,8FAAmC;QAUvD,0DAAqD;QAArD,+FAAqD;QAS7B,0DAAsC;QAAtC,iGAAsC;QAU9D,0DAAwB;QAAxB,sFAAwB;QACxB,0DAAsB;QAAtB,oFAAsB;;6FDhGd,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICahD,sEAAsC;IAAA,kFAAuB;IAAA,4DAAM;;;IAFrE,0EACE;IACA,kHAAsC;IACxC,4DAAM;;;;IADC,0DAAgC;IAAhC,iHAAgC;;;IAwBvC,0EAAgD;IAAA,qEAAI;IAAA,oEAAG;IAAA,uDAA2B;IAAA,4DAAI;IAAA,4DAAK;IAAA,4DAAM;;;IAA1C,0DAA2B;IAA3B,wGAA2B;;;IAgB/E,qEACM;IAAA,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAG9B,4DAAK;;;IANG,0DAAc;IAAd,8EAAc;IACd,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAe;IAAf,+EAAe;IACf,0DAAiB;IAAjB,iFAAiB;;;IAnB9B,sEAEA;IAAA,4EAEE;IAAA,wEACE;IAAA,qEACE;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IAEb,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,oFAAwB;IAAA,4DAAK;IAEnC,4DAAK;IACP,4DAAQ;IACR,yEACC;IAAA,mHACM;IAOP,4DAAQ;IACV,4DAAQ;IACR,4DAAM;;;IAvBgF,0DAAuB;IAAvB,uFAAuB;IAatG,2DAAkC;IAAlC,wFAAkC;;;IAWzC,sEAAyB;IAAA,uDAAW;IAAA,4DAAM;;;IAAjB,0DAAW;IAAX,+EAAW;;;ADtD7B,MAAM,eAAe;IAE1B,YAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QACrC,iBAAY,GAAW,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;QAEvC,WAAM,GAAW,EAAE,CAAC;QAEpB,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAY,KAAK,CAAC;QAC7B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QACxB,YAAO,GAAW,EAAE,CAAC;QACrB,UAAK,GAAG,mBAAmB,CAAC;QAC5B,cAAS,GAAwB,EAAE,CAAC;IAXK,CAAC;IAY1C,QAAQ;IAGN,CAAC;IAED,SAAS,CAAC,IAAI;QAEZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAG,IAAI,CAAC,KAAK,EACb;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC7C,YAAY;YACX,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;YACzL,wDAAwD;YACtD,2CAA2C;YAC3C,wDAAwD;YACzD,6BAA6B;YAC5B,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,YAAiB,EAAE,EAAE;gBAC3E,YAAY;gBACZ,IAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,EACvC;oBACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,SAAS,GAAG;wBACf,UAAU,EAAE,cAAc;wBAC1B,UAAU,EAAE,CAAC;wBACb,UAAU,EAAE,IAAI;qBACjB,CAAC;iBAEF;qBAED;oBACC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;iBACjC;gBACE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC9B,CAAC,CAAC;YAEE,8CAA8C;SAC7C;IACH,CAAC;;8EA1DU,eAAe;+FAAf,eAAe;;QCV5B,yEAEI;QAAA,6EACJ;QAAA,2EAEA;QACA,yEAAQ;QAAA,qEAAI;QAAA,oEAAG;QAAA,uEAAY;QAAA,4DAAI;QAAA,4DAAK;QAAA,4DAAS;QAAA,gEAE7C;QAGA,2GACE;QAGF,0EACI;QAAA,4EAAsC;QAAA,uEAAW;QAAA,4DAAQ;QACvD,0EACA;QAAA,0EACI;QAAA,2EAAgC;QAAA,mEAA4C;QAAA,4DAAO;QACzF,iFAGE;QAHoB,kMAAkC;QAAxD,4DAGE;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,0EACE;QAAA,uEAA8C;QAC9C,2EAAsB;QAAA,iEACpB;QAAA,iJAAoF;QAAA,8EAA+E;QAAzD,oRAAS,kBAAqB,IAAC;QAA0B,mHAAuD;QAAA,uEAA8C;QAAA,4GAAgD;QAAA,4DAAS;QACnU,4DAAM;QACR,4DAAM;QAEN,4DAAW;QACX,4DAAO;QACP,8GAAgD;QAChD,+GAEA;QAwBA,8GAAyB;QACzB,4DAAM;;;;QAtDD,0DAA+C;QAA/C,8FAA+C;QAS1B,0DAAkC;QAAlC,6FAAkC;QAiBvD,2DAAgB;QAAhB,8EAAgB;QAChB,0DAAgB;QAAhB,8EAAgB;QA0BhB,0DAAmB;QAAnB,iFAAmB;;6FDtDX,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {register} from './register';\nimport {punching} from './punching';\nimport { report } from './report';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n//  bcp_api_service = \"http://127.0.0.1:3004\";\n  //safety_api_service = \"http://127.0.0.1:3005\";\n  bcp_api_service = \"https://bcpservice.herokuapp.com\";\n  constructor(private httpclient: HttpClient) { }\n\n  createUser(User: register): Observable<string>{\n    return this.httpclient.post<string>(`${this.bcp_api_service}/registerUser`, User);\n  }\n\n  getUserDetail(id: string): Observable<register>{\n    return this.httpclient.get<register>(`${this.bcp_api_service}/getuser/`+id)\n  }\n\n  dailyPunching(Data: punching): Observable<string>{\n    return this.httpclient.post<string>(`${this.bcp_api_service}/LogData`, Data);\n  }\n\n  getPunchingData(dailyDate: report): Observable<punching[]>{\n    return this.httpclient.post<punching[]>(`${this.bcp_api_service}/getuserdetails`, dailyDate);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { PunchingComponent } from './punching/punching.component';\nimport { ReportComponent } from './report/report.component';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: 'register', component: RegisterComponent },\n  { path: 'punching', component: PunchingComponent },\n  { path: 'report', component: ReportComponent },\n  { path: 'home', component:HomeComponent},\n  { path: '', component:HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BCP-Safety-app';\n}\n","\n<app-menu></app-menu>\n    \n<div class=\"container-fluid text-center\">    \n  <div class=\"row content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PunchingComponent } from './punching/punching.component';\nimport { ReportComponent } from './report/report.component';\nimport {DataTablesModule} from 'angular-datatables';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    HomeComponent,\n    RegisterComponent,\n    PunchingComponent,\n    ReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    DataTablesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { ApiService} from '../api.service';\nimport {register} from '../register';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router, private api: ApiService) { }\nselectedEmail: string =\"\";\niserrorMessage: boolean = false;\napi_message: string = \"\";\n  ngOnInit(): void {\n    this.selectedEmail = \"\";\n  }\n\n  NewUser(){\n    \n    console.log('new user call');\n      this.router.navigate(['/register']);\n  }\n\n  ExistingUser(form){\n    if(form.valid)\n    {\n      this.api.getUserDetail(this.selectedEmail).subscribe((userdetail: register) => {\n        if(Object.keys(userdetail).length > 0)\n        {\n          this.router.navigate(['/punching',{email: this.selectedEmail}]);\n        }\n        else\n        {\n          this.iserrorMessage = true;\n    this.api_message = \"User is not registered, kindly register yourself first.\";\n        }\n      })\n   \n    }\n}\n\n}\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #f=\"ngForm\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>Welcome to Safety App</b></h2></legend><br>\n<!-- \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\"></label>\n    <div class=\"col-md-4\"><br>\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n      <button class=\"btn btn-warning\" (click)=\"NewUser()\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;New User <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n        </div>\n    </div>\n  </div> -->\n\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\"></label>\n    <div class=\"col-md-4\"><br>\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n      <!-- <input name=\"email\" placeholder=\"E-Mail Address\" class=\"form-control\"  type=\"text\"> -->\n      <button type=\"submit\" class=\"btn btn-warning form-control\" (click)=\"NewUser()\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;New User <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n        </div>\n     \n    </div>\n  </div>\n\n  <div *ngIf=\"f.submitted && email.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"email.errors?.required || email.errors?.pattern\">E-mail is required or invalid</div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\"></label>\n    <div class=\"col-md-4\"><br>\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n      <input name=\"email\" placeholder=\"E-Mail Address\" [(ngModel)]=\"selectedEmail\" class=\"form-control\"  type=\"text\"\n      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n    #email=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"\n     required>\n      <button type=\"submit\" class=\"btn btn-warning form-control\" (click)=\"ExistingUser(f)\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Existing User <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n        </div>\n        <div *ngIf=\"iserrorMessage\" class=\"alert alert-warning\" role=\"alert\" id=\"error_message\">{{api_message}}</div>\n    </div>\n  </div>\n\n\n<!-- Button -->\n\n\n</fieldset>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from '../api.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private api:ApiService) { }\n //isAdmin: Boolean = false;\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<nav class=\"navbar navbar-inverse\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <!-- <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>                        \n        </button> -->\n        <a class=\"navbar-brand\" routerLink=\"home\">Logo</a>\n      </div>\n      <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\n        <ul class=\"nav navbar-nav\">\n          <!-- <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"home\" routerLinkActive=\"active\">Home</a></li> -->\n          <!-- <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"register\" routerLinkActive=\"active\">Register</a></li>\n          <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"punching\" routerLinkActive=\"active\">Punching</a></li> -->\n          <!-- <li *ngIf=\"isAdmin\" class=\"nav-item\"><a class=\"nav-link\" routerLink=\"report\" routerLinkActive=\"active\">Daily Report</a></li> -->\n        </ul>\n        <!-- <ul class=\"nav navbar-nav navbar-right\">\n          <li><a href=\"#\"><span class=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\n        </ul> -->\n      </div>\n    </div>\n  </nav>","\nimport { Component, OnInit } from '@angular/core';\nimport { punching } from '../punching'\nimport {register} from '../register';\nimport {ActivatedRoute, Router } from '@angular/router';\nimport {ApiService} from '../api.service';\n\n\n\n@Component({\n  selector: 'app-punching',\n  templateUrl: './punching.component.html',\n  styleUrls: ['./punching.component.css']\n})\nexport class PunchingComponent implements OnInit {\n  \n  constructor(private route: ActivatedRoute, private api:ApiService, private router: Router ) { }\n  getEmail: string = \"\";\n  issuccessMessage: boolean = false;\n  iserrorMessage: boolean = false;\n  isAdmin: Boolean = false;\n  api_message: string = \"\";\nselectedPunching: punching = { email: null, name: null, mobile: null, location: null, familycount: null, covid: null, locality: null, aarogya: null, remarks: null}\n  ngOnInit(): void {\n   this.getEmail = this.route.snapshot.paramMap.get('email');\n   this.selectedPunching.email = this.getEmail;\n\nthis.api.getUserDetail(this.getEmail).subscribe((userdetail: register) => {\n  console.log(userdetail);\n  console.log(Object.keys(userdetail).length);\n  if(Object.keys(userdetail).length > 0)\n  {\n  this.selectedPunching.name = userdetail[0].name;\n  this.selectedPunching.mobile = userdetail[0].mobile;\n  this.selectedPunching.location = userdetail[0].location;\n  this.selectedPunching.familycount = userdetail[0].familycount;\n  if(userdetail[0].role == \"1\")\n  {\n    this.isAdmin = true;\n  }\n  else\n  {this.isAdmin = false;}\n  }\n  else{\n    this.issuccessMessage = false;\n    this.iserrorMessage = true;\n    this.api_message = \"Data not available, try again.\";\n  }\n})\n\n   this.selectedPunching.covid = \"Yes\";\n   this.selectedPunching.locality=\"No\";\n   this.selectedPunching.aarogya=\"Yes\";\n\n  }\n\n  submitPunching(form){\n    console.log(JSON.stringify(this.selectedPunching, null, \" \"));\n    this.api.dailyPunching(this.selectedPunching).subscribe((statusstring: string) => {\n      if(statusstring == \"1\")\n      {\n        this.issuccessMessage = true;\n        this.iserrorMessage = false;\n        this.api_message = \"Record saved successfully.\";\n      }\n      if(statusstring == \"0\")\n      {\n        this.issuccessMessage = false;\n        this.iserrorMessage = true;\n        this.api_message = \"Error occured, please try again.\";\n      }\n      console.log(statusstring);\n    })\n  }\n\n  showReport(){\n    this.router.navigate(['/report']);\n  }\n\n}\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #punchingForm = \"ngForm\"  id=\"punching_form\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>Daily Punching</b></h2></legend><br>\n\n<!-- Text input-->\n\n<!-- Text input-->\n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">E-Mail</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n    <input name=\"email\" placeholder=\"E-Mail Address\" [(ngModel)]=\"selectedPunching.email\" class=\"form-control\"  type=\"text\" readonly>\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n       \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Is your family safe from Covid19 ?</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n         \n          <label class=\"radio-inline\">\n            <input type=\"radio\"  [(ngModel)]=\"selectedPunching.covid\" name=\"covid\" value=\"Yes\" checked>Yes\n          </label>\n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.covid\" value=\"No\" name=\"covid\">No\n          </label>\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Is nearby locality afftected with Covid19 ?</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n         \n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.locality\" name=\"locality\" value=\"Yes\">Yes\n          </label>\n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.locality\" name=\"locality\" value=\"No\" checked>No\n          </label>\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Is Aarogya Setu app shownig Safe ?</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n         \n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.aarogya\" name=\"aarogya\" value=\"Yes\" checked>Yes\n          </label>\n          <label class=\"radio-inline\">\n            <input type=\"radio\" [(ngModel)]=\"selectedPunching.aarogya\" value=\"No\" name=\"aarogya\">No\n          </label>\n\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" >Remarks</label> \n    <div class=\"col-md-4 inputGroupContainer\">\n    <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-pencil\"></i></span>\n  <input name=\"remarks\" placeholder=\"Enter remarks if any\" [(ngModel)]=\"selectedPunching.remarks\" class=\"form-control\"  type=\"text\">\n    </div>\n  </div>\n</div>\n\n  \n\n<!-- Success message -->\n<div *ngIf=\"issuccessMessage\" class=\"alert alert-success\" role=\"alert\" id=\"success_message\">{{api_message}}</div>\n<div *ngIf=\"iserrorMessage\" class=\"alert alert-warning\" role=\"alert\" id=\"error_message\">{{api_message}}</div>\n\n<!-- Button -->\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" ></label> \n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"submitPunching(punchingForm)\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SUBMIT <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n\n</div>\n\n<div *ngIf=\"isAdmin\" class=\"form-group\">\n  <label class=\"col-md-4 control-label\"></label>\n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"showReport()\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Show Report <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n</div>\n\n</fieldset>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { register } from '../register';\nimport {ApiService} from '../api.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private apiService:ApiService, private router: Router) { }\n\n  issuccessMessage: boolean = false;\n  iserrorMessage: boolean = false;\n  api_message: string = \"\";\n  selectedUser: register = { name:null, email: null, mobile: null, location: null, familycount: null}\n\n  ngOnInit(): void {\n  }\n\n  NewRegistration(form){\n    if(form.valid)\n    {\n    console.log(JSON.stringify(form.value, null, \" \"));\n    this.apiService.createUser(form.value).subscribe((statusstring: string)=>{\n      if(statusstring == \"1\")\n      {\n        this.issuccessMessage = true;\n        this.iserrorMessage = false;\n        this.api_message = \"User successfully registered.\";\n        this.router.navigate(['/punching',{email: this.selectedUser.email}]);\n      }\n      if(statusstring == \"2\")\n      {\n        this.issuccessMessage = false;\n        this.iserrorMessage = true;\n        this.api_message = \"User already registered.\";\n      }\n      console.log(statusstring);\n    }, error  =>{\n      console.log(error);\n    })\n    \n    }\n  }\n}\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #registerForm=\"ngForm\" novalidate id=\"contact_form\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>User Registration</b></h2></legend><br>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && name.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"name.errors?.required || name.errors?.pattern\">Name is required and text only</div>\n  </div>\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\">Name</label>  \n  <div class=\"col-md-4 inputGroupContainer\">\n  <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n  <input  name=\"name\" [(ngModel)]=\"selectedUser.name\" placeholder=\"Enter Name\" class=\"form-control\"  type=\"text\"\n  pattern=\"[a-zA-Z\\s]+\"\n  #name=\"ngModel\"\n  [ngClass]=\"{ 'is-invalid': registerForm.submitted && name.invalid }\"\n   required\n  >\n\n    </div>\n  </div>\n</div>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && email.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"email.errors?.required || email.errors?.pattern\">E-mail is required and should be valid</div>\n  </div>\n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">E-Mail</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n    <input name=\"email\" [(ngModel)]=\"selectedUser.email\" placeholder=\"E-Mail Address\" class=\"form-control\"  type=\"email\"\n    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n    #email=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': registerForm.submitted && email.invalid }\"\n     required>\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && mobile.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"mobile.errors?.required || mobile.errors?.pattern\">Mobile Number is required and numeric only</div>\n  </div>       \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Contact No.</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-earphone\"></i></span>\n    <input name=\"mobile\" [(ngModel)]=\"selectedUser.mobile\" placeholder=\"888888888\" class=\"form-control\" type=\"text\"\n    pattern=\"[0-9]+\"\n    #mobile=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': registerForm.submitted && mobile.invalid }\"\n     required>\n      </div>\n    </div>\n  </div>\n\n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && location.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"location.errors?.required\">Location is required</div>\n  </div>\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" >Location</label> \n    <div class=\"col-md-4 inputGroupContainer\">\n    <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-map-marker\"></i></span>\n  <input name=\"location\" [(ngModel)]=\"selectedUser.location\" placeholder=\"Location\" class=\"form-control\"  type=\"text\"\n  #location=\"ngModel\"\n  [ngClass]=\"{ 'is-invalid': registerForm.submitted && location.invalid }\"\n   required>\n    </div>\n  </div>\n</div>\n\n  \n<!-- Text input-->\n<div *ngIf=\"registerForm.submitted && familycount.invalid\" class=\"text-danger\">\n    <!-- individual validation errors -->\n    <div *ngIf=\"familycount.errors?.required || familycount.errors?.pattern\">Family member count is required and numeric only</div>\n  </div>\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\">Family members count</label>  \n  <div class=\"col-md-4 inputGroupContainer\">\n  <div class=\"input-group\">\n  <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n  <input  name=\"familycount\" [(ngModel)]=\"selectedUser.familycount\" placeholder=\"Family count\" class=\"form-control\"  type=\"text\"\n  pattern=\"[0-9]{1,2}\"\n  #familycount=\"ngModel\"\n  [ngClass]=\"{ 'is-invalid': registerForm.submitted && familycount.invalid }\"\n   required>\n    </div>\n  </div>\n</div>\n\n<!-- Success message -->\n<div *ngIf=\"issuccessMessage\" class=\"alert alert-success\" role=\"alert\" id=\"success_message\">{{api_message}}</div>\n<div *ngIf=\"iserrorMessage\" class=\"alert alert-warning\" role=\"alert\" id=\"error_message\">{{api_message}}</div>\n\n<!-- Button -->\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\"></label>\n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"NewRegistration(registerForm)\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SUBMIT <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n</div>\n\n</fieldset>\n</form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { report } from '../report';\nimport {ApiService} from '../api.service'\nimport {punching} from '../punching';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor(private api: ApiService) { }\nselectedDate: report = {logdate: null};\nlogdate: any;\nmyDate: string = \"\";\npunchingdata: punching;\nIsrecord: Boolean = false;\nIsrecordnot: Boolean = false;\nisReport: Boolean = false;\nreportdate: string = \"\";\nmessage: string = \"\";\ntitle = 'angulardatatables';\ndtOptions: DataTables.Settings = {};\nngOnInit() {\n \n    \n  }\n\n  getReport(form)\n  {\n    this.isReport = true;\n    if(form.valid)\n    {\n      this.reportdate = this.selectedDate.logdate;\n     // debugger;\n      this.myDate = (new Date(this.selectedDate.logdate).getMonth() + 1) + \"/\" + (new Date(this.selectedDate.logdate).getDate()) + \"/\" + (new Date(this.selectedDate.logdate).getFullYear());\n    //  console.log(JSON.stringify(this.myDate, null, \" \"));\n      //this.logdate = {\"logdate\" : this.myDate};\n      //this.logdate = JSON.stringify(this.logdate, null, \" \")\n     // console.log(this.logdate);\n      this.selectedDate.logdate = this.myDate;\n      console.log(this.selectedDate);\nthis.api.getPunchingData(this.selectedDate).subscribe((punchingdata: any) => {\n // debugger;\n if(Object.keys(punchingdata).length > 0 )\n {\n   this.Isrecord = true;\n   this.Isrecordnot = false;\n  this.punchingdata = punchingdata;\n  this.dtOptions = {\n    pagingType: 'full_numbers',\n    pageLength: 5,\n    processing: true\n  };\n  \n }\n else\n {\n  this.Isrecord = false;\n  this.Isrecordnot = true;\n  this.message = \"No record found\";\n }\n    console.log(punchingdata);\n})\n\n    //  console.log(this.selectedDate.reportdate);\n    }\n  }\n\n}\n\n","<div class=\"container\">\n\n    <form class=\"well form-horizontal\" #reportForm=\"ngForm\"  id=\"report_form\">\n<fieldset>\n\n<!-- Form Name -->\n<legend><h2><b>Daily Report</b></h2></legend><br>\n\n<!-- Text input-->\n\n<!-- Text input-->\n<div *ngIf=\"reportForm.submitted && logdate.invalid\" class=\"text-danger\">\n  <!-- individual validation errors -->\n  <div *ngIf=\"logdate.errors?.required\">Report date is required</div>\n</div> \n<div class=\"form-group\">\n    <label class=\"col-md-4 control-label\">Report Date</label>  \n      <div class=\"col-md-4 inputGroupContainer\">\n      <div class=\"input-group\">\n          <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-calendar\"></i></span>\n    <input name=\"logdate\" [(ngModel)]=\"selectedDate.logdate\" class=\"form-control\"  type=\"date\" required\n    #logdate=\"ngModel\"\n    [ngClass]=\"{ 'is-invalid': reportForm.submitted && logdate.invalid }\">\n      </div>\n    </div>\n  </div>\n\n<!-- Button -->\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\"></label>\n  <div class=\"col-md-4\"><br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" (click)=\"getReport(reportForm)\" class=\"btn btn-warning\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SUBMIT <span class=\"glyphicon glyphicon-send\"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n  </div>\n</div>\n\n</fieldset>\n</form>\n<div *ngIf=\"isReport\" style=\"text-align: left;\"><h6><b>Report Date: {{reportdate}}</b></h6></div>\n<div *ngIf=\"Isrecord\">\n  \n<table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\"  data-page-length='25'>\n  \n  <thead>\n    <tr>\n      <th>Name</th>\n      <!-- <th>Email</th> -->\n      <th>Contact</th>\n      <th>Family Safe</th>\n      <th>Safe as per Aarogya Setu</th>\n      <!-- <th data-class-name=\"priority\">Email</th> -->\n    </tr>\n  </thead>\n  <tbody>\n   <tr *ngFor=\"let group of punchingdata\">\n         <td>{{group.name}}</td>\n         <td>{{group.mobile}}</td>\n         <td>{{group.covid}}</td>\n         <td>{{group.aarogya}}</td>\n        <!-- <td>{{group.email}}</td> -->\n       \n     </tr>\n  </tbody>\n</table>\n</div>\n<div *ngIf=\"Isrecordnot\">{{message}}</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}